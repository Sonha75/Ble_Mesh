[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D "D:\ESP_IDF\Ble mesh\esp32_btmesh\ble-mesh-custom-sensor-model-code\node_DHT\BLE_MESH_Node_DHT11\build\bootloader\esp-idf\esptool_py" && D:\ESP_IDF\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe D:/ESP_IDF/Espressif/frameworks/esp-idf-v5.1.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 "D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/node_DHT/BLE_MESH_Node_DHT11/build/bootloader/bootloader.bin""
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/node_DHT/BLE_MESH_Node_DHT11/main/main.c:21:16: warning: 'ticks' defined but not used [-Wunused-variable]
   21 | static uint8_t ticks = 0;
      |                ^~~~~
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable BLE_MESH_Node.elf
[6/8] Generating binary image from built executable
esptool.py v4.7.dev3
Creating esp32 image...
Merged 27 ELF sections
Successfully created esp32 image.
Generated D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/node_DHT/BLE_MESH_Node_DHT11/build/BLE_MESH_Node.bin
[7/8] cmd.exe /C "cd /D "D:\ESP_IDF\Ble mesh\esp32_btmesh\ble-mesh-custom-sensor-model-code\node_DHT\BLE_MESH_Node_DHT11\build\esp-idf\esptool_py" && D:\ESP_IDF\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe D:/ESP_IDF/Espressif/frameworks/esp-idf-v5.1.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app "D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/node_DHT/BLE_MESH_Node_DHT11/build/partition_table/partition-table.bin" "D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/node_DHT/BLE_MESH_Node_DHT11/build/BLE_MESH_Node.bin""
BLE_MESH_Node.bin binary size 0xf68b0 bytes. Smallest app partition is 0x220000 bytes. 0x129750 bytes (55%) free.
[7/8] cmd.exe /C "cd /D D:\ESP_IDF\Espressif\frameworks\esp-idf-v5.1.2\components\esptool_py && D:\ESP_IDF\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=D:/ESP_IDF/Espressif/frameworks/esp-idf-v5.1.2 -D SERIAL_TOOL=D:/ESP_IDF/Espressif/python_env/idf5.1_py3.11_env/Scripts/python.exe;;D:/ESP_IDF/Espressif/frameworks/esp-idf-v5.1.2/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D "WORKING_DIRECTORY=D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/node_DHT/BLE_MESH_Node_DHT11/build" -P D:/ESP_IDF/Espressif/frameworks/esp-idf-v5.1.2/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM4 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x20000 BLE_MESH_Node.bin 0x8000 partition_table/partition-table.bin 0xf000 ota_data_initial.bin
esptool.py v4.7.dev3
Serial port COM4
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: e4:65:b8:e7:45:64
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00020000 to 0x00116fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Flash will be erased from 0x0000f000 to 0x00010fff...
Compressed 26640 bytes to 16690...
Writing at 0x00001000... (50 %)
Writing at 0x0000768a... (100 %)
Wrote 26640 bytes (16690 compressed) at 0x00001000 in 0.8 seconds (effective 273.5 kbit/s)...
Hash of data verified.
Compressed 1009840 bytes to 580710...
Writing at 0x00020000... (2 %)
Writing at 0x0002d38d... (5 %)
Writing at 0x0003e2e3... (8 %)
Writing at 0x0004b641... (11 %)
Writing at 0x00054507... (13 %)
Writing at 0x00059de4... (16 %)
Writing at 0x0005f60a... (19 %)
Writing at 0x00064c64... (22 %)
Writing at 0x0006aeb6... (25 %)
Writing at 0x000713ba... (27 %)
Writing at 0x00076f1d... (30 %)
Writing at 0x0007d5cf... (33 %)
Writing at 0x0008507d... (36 %)
Writing at 0x0008b51b... (38 %)
Writing at 0x0009155c... (41 %)
Writing at 0x00097028... (44 %)
Writing at 0x0009c936... (47 %)
Writing at 0x000a2244... (50 %)
Writing at 0x000a7e2b... (52 %)
Writing at 0x000ae8f8... (55 %)
Writing at 0x000b4a1c... (58 %)
Writing at 0x000ba9ab... (61 %)
Writing at 0x000c097f... (63 %)
Writing at 0x000c65a4... (66 %)
Writing at 0x000cc8e0... (69 %)
Writing at 0x000d2c87... (72 %)
Writing at 0x000d86d0... (75 %)
Writing at 0x000de17d... (77 %)
Writing at 0x000e3a19... (80 %)
Writing at 0x000ec941... (83 %)
Writing at 0x000f4873... (86 %)
Writing at 0x000fca99... (88 %)
Writing at 0x00102c66... (91 %)
Writing at 0x001083c6... (94 %)
Writing at 0x0010e0a5... (97 %)
Writing at 0x00113e3e... (100 %)
Wrote 1009840 bytes (580710 compressed) at 0x00020000 in 14.3 seconds (effective 564.7 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 488.0 kbit/s)...
Hash of data verified.
Compressed 8192 bytes to 31...
Writing at 0x0000f000... (100 %)
Wrote 8192 bytes (31 compressed) at 0x0000f000 in 0.0 seconds (effective 2441.6 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
