[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D "D:\ESP_IDF\Ble mesh\esp32_btmesh\ble-mesh-custom-sensor-model-code\BLE_MESH_Gate\build\bootloader\esp-idf\esptool_py" && D:\ESP_IDF\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe D:/ESP_IDF/Espressif/frameworks/esp-idf-v5.1.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 "D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/BLE_MESH_Gate/build/bootloader/bootloader.bin""
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/BLE_MESH_Gate/main/main.c:17:16: warning: 'ticks' defined but not used [-Wunused-variable]
   17 | static uint8_t ticks = 0;
      |                ^~~~~
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable BLE_MESH_Gate.elf
[6/8] Generating binary image from built executable
esptool.py v4.7.dev3
Creating esp32 image...
Merged 27 ELF sections
Successfully created esp32 image.
Generated D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/BLE_MESH_Gate/build/BLE_MESH_Gate.bin
[7/8] cmd.exe /C "cd /D "D:\ESP_IDF\Ble mesh\esp32_btmesh\ble-mesh-custom-sensor-model-code\BLE_MESH_Gate\build\esp-idf\esptool_py" && D:\ESP_IDF\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe D:/ESP_IDF/Espressif/frameworks/esp-idf-v5.1.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app "D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/BLE_MESH_Gate/build/partition_table/partition-table.bin" "D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/BLE_MESH_Gate/build/BLE_MESH_Gate.bin""
BLE_MESH_Gate.bin binary size 0x189870 bytes. Smallest app partition is 0x220000 bytes. 0x96790 bytes (28%) free.
[7/8] cmd.exe /C "cd /D D:\ESP_IDF\Espressif\frameworks\esp-idf-v5.1.2\components\esptool_py && D:\ESP_IDF\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=D:/ESP_IDF/Espressif/frameworks/esp-idf-v5.1.2 -D SERIAL_TOOL=D:/ESP_IDF/Espressif/python_env/idf5.1_py3.11_env/Scripts/python.exe;;D:/ESP_IDF/Espressif/frameworks/esp-idf-v5.1.2/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D "WORKING_DIRECTORY=D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/BLE_MESH_Gate/build" -P D:/ESP_IDF/Espressif/frameworks/esp-idf-v5.1.2/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM18 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x20000 BLE_MESH_Gate.bin 0x8000 partition_table/partition-table.bin 0xf000 ota_data_initial.bin
esptool.py v4.7.dev3
Serial port COM18
Connecting.....
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: b0:a7:32:28:23:8c
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00020000 to 0x001a9fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Flash will be erased from 0x0000f000 to 0x00010fff...
Compressed 26640 bytes to 16691...
Writing at 0x00001000... (50 %)
Writing at 0x0000768a... (100 %)
Wrote 26640 bytes (16691 compressed) at 0x00001000 in 0.5 seconds (effective 401.9 kbit/s)...
Hash of data verified.
Compressed 1611888 bytes to 989794...
Writing at 0x00020000... (1 %)
Writing at 0x0002ce84... (3 %)
Writing at 0x0003e180... (4 %)
Writing at 0x0004b790... (6 %)
Writing at 0x00053fc7... (8 %)
Writing at 0x000590d2... (9 %)
Writing at 0x00062eb0... (11 %)
Writing at 0x0006f2ed... (13 %)
Writing at 0x000752d5... (14 %)
Writing at 0x0007ae10... (16 %)
Writing at 0x0008082e... (18 %)
Writing at 0x00085d87... (19 %)
Writing at 0x0008ba3a... (21 %)
Writing at 0x0009190a... (22 %)
Writing at 0x00097569... (24 %)
Writing at 0x0009d797... (26 %)
Writing at 0x000a5309... (27 %)
Writing at 0x000abcac... (29 %)
Writing at 0x000b1da0... (31 %)
Writing at 0x000b7915... (32 %)
Writing at 0x000bd24e... (34 %)
Writing at 0x000c29d8... (36 %)
Writing at 0x000c87fe... (37 %)
Writing at 0x000cf397... (39 %)
Writing at 0x000d53fc... (40 %)
Writing at 0x000db353... (42 %)
Writing at 0x000e14a7... (44 %)
Writing at 0x000e70de... (45 %)
Writing at 0x000ed440... (47 %)
Writing at 0x000f3375... (49 %)
Writing at 0x000f951c... (50 %)
Writing at 0x000ff0bc... (52 %)
Writing at 0x00104c61... (54 %)
Writing at 0x0010a6e8... (55 %)
Writing at 0x00110c77... (57 %)
Writing at 0x00116761... (59 %)
Writing at 0x0011c085... (60 %)
Writing at 0x00121729... (62 %)
Writing at 0x001269e3... (63 %)
Writing at 0x0012bebb... (65 %)
Writing at 0x001311e3... (67 %)
Writing at 0x00136816... (68 %)
Writing at 0x0013bf8c... (70 %)
Writing at 0x00141ea0... (72 %)
Writing at 0x001475d2... (73 %)
Writing at 0x0014cb3b... (75 %)
Writing at 0x001522bc... (77 %)
Writing at 0x00157caa... (78 %)
Writing at 0x0015d371... (80 %)
Writing at 0x00162d62... (81 %)
Writing at 0x001687e9... (83 %)
Writing at 0x0016df7a... (85 %)
Writing at 0x00177091... (86 %)
Writing at 0x0017d38b... (88 %)
Writing at 0x00185556... (90 %)
Writing at 0x0018b278... (91 %)
Writing at 0x00190c26... (93 %)
Writing at 0x001969b8... (95 %)
Writing at 0x0019c350... (96 %)
Writing at 0x001a1ec9... (98 %)
Writing at 0x001a712c... (100 %)
Wrote 1611888 bytes (989794 compressed) at 0x00020000 in 22.5 seconds (effective 574.3 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 1137.8 kbit/s)...
Hash of data verified.
Compressed 8192 bytes to 31...
Writing at 0x0000f000... (100 %)
Wrote 8192 bytes (31 compressed) at 0x0000f000 in 0.0 seconds (effective 2299.4 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
